# -*- coding: utf-8 -*-
"""Iris_Classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10BmVOx1iyLXAkcU-INbwMJg-7PJPTG7T
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from IPython.display import display

#Import the Flower Iris dataset
from sklearn.datasets import load_iris
iris_dataset = load_iris();

#Iris object returned from load_iris() is a Bunch object, similar to a dictionary
print("Keys of iris_dataset:\n", iris_dataset.keys())

#analyze dataset
print(iris_dataset['DESCR'][:200])
print("Target Names:", iris_dataset['target_names'])
print("Target:", iris_dataset['target'].shape)
print("Feature Names:", iris_dataset['feature_names'])
print("Shape of Data:", iris_dataset['data'].shape)

#split into train and test sets
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(iris_dataset['data'], iris_dataset['target'], random_state=0);

#Resulting shapes of data sets
print("X_train shape:", X_train.shape)
print("X_test shape:", X_test.shape)

#Resulting shapes of label sets
print("y_train shape:", y_train.shape)
print("y_test shape:", y_test.shape)

#Plot training data
import pandas as pd
iris_dataframe = pd.DataFrame(X_train, columns=iris_dataset['feature_names'])
pd.plotting.scatter_matrix(
    iris_dataframe,
    c=y_train,
    figsize=(15,15),
    marker='o',
    alpha=.7,
    cmap='cool',
    hist_kwds={'bins': 20},
    s=50);

#Use KNN classifier with 1 neighbor
from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier(n_neighbors=1)

knn.fit(X_train, y_train);

#Test single random data point
X_new = np.array([[.2, .5, .6, .2]])
print(X_new.shape)

#Predict random data point
prediction = knn.predict(X_new)
print("Prediction:", prediction)
print("Predicted Target Name:", iris_dataset['target_names'][prediction])

#Evaluate testing sets and get accuracy
y_pred = knn.predict(X_test)
print("Accuracy {:.2f}".format(knn.score(X_test, y_test)))